import { AnimatePresence, PresenceChild } from "@tamagui/animate-presence";
import { startTransition, useEffect, useState } from "react";
import { Fragment, jsx } from "react/jsx-runtime";
function Animate({
  children,
  lazyMount,
  type,
  present,
  ...props
}) {
  const [lazyMounted, setLazyMounted] = useState(lazyMount ? !1 : present);
  useEffect(() => {
    lazyMount && present && startTransition(() => {
      setLazyMounted(present);
    });
  }, [lazyMount, present]);
  const mounted = present ? lazyMount ? lazyMounted : present : !1;
  return type === "presence" ? props.keepChildrenMounted ? /* @__PURE__ */ jsx(
    PresenceChild,
    {
      initial: props.initial ? void 0 : !1,
      onExitComplete: props.onExitComplete,
      enterVariant: props.enterVariant,
      exitVariant: props.exitVariant,
      enterExitVariant: props.enterExitVariant,
      presenceAffectsLayout: !1,
      isPresent: present,
      custom: props.custom,
      children
    }
  ) : /* @__PURE__ */ jsx(AnimatePresence, { ...props, children: mounted ? children : null }) : /* @__PURE__ */ jsx(Fragment, { children });
}
export {
  Animate
};
//# sourceMappingURL=Animate.js.map
